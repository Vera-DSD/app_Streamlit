importimport streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import yfinance as yf 
from datetime import datetime, timedelta
import seaborn as sns

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ - Apple –∏ Tips",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title('üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä')
st.markdown('---')

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
st.sidebar.title("üéõÔ∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

# –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ - –ü–†–ê–í–ò–õ–¨–ù–û–ï –†–ê–°–ü–û–õ–û–ñ–ï–ù–ò–ï
st.sidebar.header("üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤")
uploaded_file = st.sidebar.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª", type=['csv'], 
                                       help="–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ Tips Analysis")

# –ù–∞–≤–∏–≥–∞—Ü–∏—è
page = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", 
                       ["üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", 
                        "üìà –ê–Ω–∞–ª–∏–∑ –∞–∫—Ü–∏–π Apple", 
                        "üçΩÔ∏è –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö Tips"])

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
if page == "üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
    st.header("üè† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä!")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        ### üìà –û —Ä–∞–∑–¥–µ–ª–µ Apple Stock Analysis
        
        **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞ –∞–∫—Ü–∏–π Apple:**
        - üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        - üìà –ì—Ä–∞—Ñ–∏–∫–∏ —Ü–µ–Ω –∑–∞–∫—Ä—ã—Ç–∏—è –∏ –æ–±—ä–µ–º–æ–≤ —Ç–æ—Ä–≥–æ–≤
        - üíπ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∏ –º–µ—Ç—Ä–∏–∫–∏
        - üìã –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
        - üíæ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–æ—Ä–º–∞—Ç–µ
        
        **–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã:** 1 –º–µ—Å—è—Ü, 3 –º–µ—Å—è—Ü–∞, 1 –≥–æ–¥
        """)
    
    with col2:
        st.markdown("""
        ### üçΩÔ∏è –û —Ä–∞–∑–¥–µ–ª–µ Tips Analysis
        
        **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö Tips:**
        - üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö CSV —Ñ–∞–π–ª–æ–≤
        - üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤–∑–∞–∏–º–æ—Å–≤—è–∑–µ–π –¥–∞–Ω–Ω—ã—Ö
        - üìà –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
        - üéØ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        - üíæ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞
        
        **–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ** –∏–ª–∏ –≤–∞—à–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        """)
    
    st.markdown("---")
    st.success("üëà –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞!")

# –†–∞–∑–¥–µ–ª Apple - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
elif page == "üìà –ê–Ω–∞–ª–∏–∑ –∞–∫—Ü–∏–π Apple":
    st.header("üìà –ê–Ω–∞–ª–∏–∑ –∞–∫—Ü–∏–π Apple (AAPL)")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞")
        period = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:",
            ["1mo", "3mo", "6mo", "1y", "2y"],
            index=3,
            key="apple_period"
        )
    
    with col2:
        st.subheader("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ")
        show_volume = st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ä–µ–º—ã —Ç–æ—Ä–≥–æ–≤", value=True, key="apple_volume")
    
    # –£–ü–†–û–©–ï–ù–ù–ê–Ø –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö Apple
    try:
        with st.spinner('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ Apple...'):
            # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∑–∞–≥—Ä—É–∑–∫—É
            data = yf.download("AAPL", period=period, progress=False)
            
            if data.empty or len(data) == 0:
                st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.")
                # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
                dates = pd.date_range(end=datetime.now(), periods=60, freq='D')
                np.random.seed(42)
                
                base_price = 170
                prices = []
                current = base_price
                
                for i in range(len(dates)):
                    change = np.random.normal(0, 1.5)
                    current = max(100, current + change)
                    prices.append(current)
                
                data = pd.DataFrame({
                    'Open': [p * 0.995 for p in prices],
                    'High': [p * 1.015 for p in prices],
                    'Low': [p * 0.985 for p in prices],
                    'Close': prices,
                    'Volume': np.random.randint(2000000, 8000000, len(dates))
                }, index=dates)
            
            # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            for col in ['Open', 'High', 'Low', 'Close', 'Volume']:
                if col in data.columns:
                    data[col] = pd.to_numeric(data[col], errors='coerce')
            
            data = data.dropna()
            
            if len(data) > 0:
                st.success(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –ó–∞–ø–∏—Å–µ–π: {len(data)}")
                
                # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω
                close_prices = data['Close'].values
                current_price = float(close_prices[-1])
                
                if len(close_prices) > 1:
                    prev_price = float(close_prices[-2])
                    change = current_price - prev_price
                    change_pct = (change / prev_price) * 100
                else:
                    prev_price = current_price
                    change = 0
                    change_pct = 0
                
                # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
                st.subheader("üìä –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")
                col1, col2, col3, col4 = st.columns(4)
                
                col1.metric("–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞", f"${current_price:.2f}", f"{change:+.2f}")
                col2.metric("–ò–∑–º–µ–Ω–µ–Ω–∏–µ %", f"{change_pct:+.2f}%")
                col3.metric("–ú–∞–∫—Å–∏–º—É–º", f"${data['High'].max():.2f}")
                col4.metric("–ú–∏–Ω–∏–º—É–º", f"${data['Low'].min():.2f}")
                
                # –ì—Ä–∞—Ñ–∏–∫–∏
                tab1, tab2 = st.tabs(["üìà –ì—Ä–∞—Ñ–∏–∫–∏", "üìã –î–∞–Ω–Ω—ã–µ"])
                
                with tab1:
                    # –û—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω
                    fig, ax = plt.subplots(figsize=(12, 6))
                    ax.plot(data.index, data['Close'], linewidth=2, color='blue')
                    ax.set_title(f"–ê–∫—Ü–∏–∏ Apple (AAPL) - {period}")
                    ax.set_ylabel("–¶–µ–Ω–∞ ($)")
                    ax.grid(True, alpha=0.3)
                    st.pyplot(fig)
                    plt.close(fig)
                    
                    # –ì—Ä–∞—Ñ–∏–∫ –æ–±—ä–µ–º–æ–≤
                    if show_volume:
                        fig2, ax2 = plt.subplots(figsize=(12, 4))
                        ax2.bar(data.index, data['Volume'], alpha=0.7, color='orange')
                        ax2.set_ylabel("–û–±—ä–µ–º")
                        ax2.grid(True, alpha=0.3)
                        st.pyplot(fig2)
                        plt.close(fig2)
                
                with tab2:
                    # –î–∞–Ω–Ω—ã–µ
                    st.subheader("–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ")
                    display_data = data.round(2)
                    st.dataframe(display_data.tail(10))
                    
                    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                    stats = data.describe().round(2)
                    st.dataframe(stats)
                    
                    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
                    st.subheader("üíæ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
                    csv_data = data.to_csv().encode('utf-8')
                    st.download_button(
                        label="üì• –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ Apple",
                        data=csv_data,
                        file_name=f"apple_data_{period}.csv",
                        mime="text/csv"
                    )
            else:
                st.error("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
                
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–µ—Ä–∏–æ–¥")

# –†–∞–∑–¥–µ–ª Tips - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
elif page == "üçΩÔ∏è –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö Tips":
    st.header("üçΩÔ∏è –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö Tips")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ Tips
    def create_tips_data():
        np.random.seed(42)
        n = 100
        
        data = {
            'total_bill': np.round(np.random.uniform(10, 50, n), 2),
            'tip': np.round(np.random.uniform(1, 10, n), 2),
            'size': np.random.randint(1, 6, n),
            'day': np.random.choice(['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'], n),
            'time': np.random.choice(['–û–±–µ–¥', '–£–∂–∏–Ω'], n)
        }
        
        df = pd.DataFrame(data)
        df['tip'] = df['tip'].clip(lower=1.0)
        return df
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    if uploaded_file is not None:
        try:
            tips_data = pd.read_csv(uploaded_file)
            st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {uploaded_file.name}")
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {e}")
            tips_data = create_tips_data()
            st.info("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ")
    else:
        tips_data = create_tips_data()
        st.info("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ Tips")
    
    st.success(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –ó–∞–ø–∏—Å–µ–π: {len(tips_data)}")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    col1, col2, col3 = st.columns(3)
    col1.metric("–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π", len(tips_data))
    col2.metric("–°—Ä–µ–¥–Ω–∏–π —á–µ–∫", f"${tips_data['total_bill'].mean():.2f}")
    col3.metric("–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ", f"${tips_data['tip'].mean():.2f}")
    
    # –ì—Ä–∞—Ñ–∏–∫–∏
    tab1, tab2 = st.tabs(["üìà –ì—Ä–∞—Ñ–∏–∫–∏", "üìã –î–∞–Ω–Ω—ã–µ"])
    
    with tab1:
        # Scatter plot
        fig1, ax1 = plt.subplots(figsize=(10, 6))
        ax1.scatter(tips_data['total_bill'], tips_data['tip'], alpha=0.6)
        ax1.set_xlabel('–°—É–º–º–∞ —Å—á–µ—Ç–∞ ($)')
        ax1.set_ylabel('–ß–∞–µ–≤—ã–µ ($)')
        ax1.set_title('–°–≤—è–∑—å —Å—É–º–º—ã —Å—á–µ—Ç–∞ –∏ —á–∞–µ–≤—ã—Ö')
        ax1.grid(True, alpha=0.3)
        st.pyplot(fig1)
        plt.close(fig1)
        
        # –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞
        fig2, ax2 = plt.subplots(figsize=(10, 6))
        ax2.hist(tips_data['total_bill'], bins=15, alpha=0.7, edgecolor='black')
        ax2.set_xlabel('–°—É–º–º–∞ —Å—á–µ—Ç–∞ ($)')
        ax2.set_ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ')
        ax2.set_title('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–º–º—ã —Å—á–µ—Ç–∞')
        st.pyplot(fig2)
        plt.close(fig2)
    
    with tab2:
        # –î–∞–Ω–Ω—ã–µ
        st.dataframe(tips_data.head(10))
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        st.dataframe(tips_data.describe().round(2))
        
        # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Tips
        csv_data = tips_data.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="üì• –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ Tips",
            data=csv_data,
            file_name="tips_data.csv",
            mime="text/csv"
        )

# –§—É—Ç–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown("---")
st.markdown("### üì± –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
st.markdown("""
**–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä** - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
""")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
st.sidebar.markdown("---")
st.sidebar.info("""
**–°–ø—Ä–∞–≤–∫–∞:**
- –î–∞–Ω–Ω—ã–µ Apple –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
- Tips –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏–º–∏ CSV —Ñ–∞–π–ª–∞–º–∏
""")

if st.sidebar.button("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"):
    st.rerun()